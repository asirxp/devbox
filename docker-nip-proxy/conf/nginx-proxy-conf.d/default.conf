# If we receive X-Forwarded-Proto, pass it through; otherwise, pass along the
# scheme used to connect to this server
map $http_x_forwarded_proto $proxy_x_forwarded_proto {
  default $http_x_forwarded_proto;
  ''      $scheme;
}
# If we receive X-Forwarded-Port, pass it through; otherwise, pass along the
# server port the client connected to
map $http_x_forwarded_port $proxy_x_forwarded_port {
  default $http_x_forwarded_port;
  ''      $server_port;
}
# If we receive Upgrade, set Connection to "upgrade"; otherwise, delete any
# Connection header that may have been passed to this server
map $http_upgrade $proxy_connection {
  default upgrade;
  '' close;
}
# Apply fix for very long server names
server_names_hash_bucket_size 128;
# Default dhparam
ssl_dhparam /etc/nginx/dhparam/dhparam.pem;
# Set appropriate X-Forwarded-Ssl header
map $scheme $proxy_x_forwarded_ssl {
  default off;
  https on;
}
gzip_types text/plain text/css application/javascript application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
log_format vhost '$host $remote_addr - $remote_user [$time_local] '
                 '"$request" $status $body_bytes_sent '
                 '"$http_referer" "$http_user_agent"';
access_log off;
		ssl_protocols TLSv1.2 TLSv1.3;
		ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
		ssl_prefer_server_ciphers off;
resolver 127.0.0.11;
# HTTP 1.1 support
proxy_http_version 1.1;
proxy_buffering off;
proxy_set_header Host $http_host;
proxy_set_header Upgrade $http_upgrade;
proxy_set_header Connection $proxy_connection;
proxy_set_header X-Real-IP $remote_addr;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Proto $proxy_x_forwarded_proto;
proxy_set_header X-Forwarded-Ssl $proxy_x_forwarded_ssl;
proxy_set_header X-Forwarded-Port $proxy_x_forwarded_port;
# Mitigate httpoxy attack (see README for details)
proxy_set_header Proxy "";
server {
	server_name _; # This is just an invalid value which will never trigger on a real hostname.
	listen 80;
	access_log /var/log/nginx/access.log vhost;
	return 503;
}
# dockerhub.9.112.249.39.nip.io
upstream dockerhub.9.112.249.39.nip.io {
				## Can be connected with "devops-nip" network
			# dockerhub-httpd
			server 172.18.0.4:8445;
}
server {
	server_name dockerhub.9.112.249.39.nip.io;
	listen 80 ;
	access_log /var/log/nginx/access.log vhost;
	# Do not HTTPS redirect Let'sEncrypt ACME challenge
	location /.well-known/acme-challenge/ {
		auth_basic off;
		allow all;
		root /usr/share/nginx/html;
		try_files $uri =404;
		break;
	}
	location / {
		return 301 https://$host$request_uri;
	}
}
server {
	server_name dockerhub.9.112.249.39.nip.io;
	listen 443 ssl http2 ;
	access_log /var/log/nginx/access.log vhost;
	ssl_session_timeout 5m;
	ssl_session_cache shared:SSL:50m;
	ssl_session_tickets off;
	ssl_certificate /etc/nginx/certs/9.112.249.39.nip.io.crt;
	ssl_certificate_key /etc/nginx/certs/9.112.249.39.nip.io.key;
	add_header Strict-Transport-Security "max-age=31536000" always;
	location / {
		proxy_pass http://dockerhub.9.112.249.39.nip.io;
	}
}
# gogs.9.112.249.39.nip.io
upstream gogs.9.112.249.39.nip.io {
				## Can be connected with "devops-nip" network
			# gogs-server
			server 172.18.0.9:3000;
}
server {
	server_name gogs.9.112.249.39.nip.io;
	listen 80 ;
	access_log /var/log/nginx/access.log vhost;
	# Do not HTTPS redirect Let'sEncrypt ACME challenge
	location /.well-known/acme-challenge/ {
		auth_basic off;
		allow all;
		root /usr/share/nginx/html;
		try_files $uri =404;
		break;
	}
	location / {
		return 301 https://$host$request_uri;
	}
}
server {
	server_name gogs.9.112.249.39.nip.io;
	listen 443 ssl http2 ;
	access_log /var/log/nginx/access.log vhost;
	ssl_session_timeout 5m;
	ssl_session_cache shared:SSL:50m;
	ssl_session_tickets off;
	ssl_certificate /etc/nginx/certs/9.112.249.39.nip.io.crt;
	ssl_certificate_key /etc/nginx/certs/9.112.249.39.nip.io.key;
	add_header Strict-Transport-Security "max-age=31536000" always;
	location / {
		proxy_pass http://gogs.9.112.249.39.nip.io;
	}
}
# leanote.9.112.249.39.nip.io
upstream leanote.9.112.249.39.nip.io {
				## Can be connected with "devops-nip" network
			# leanote-httpd
			server 172.18.0.8:9000;
}
server {
	server_name leanote.9.112.249.39.nip.io;
	listen 80 ;
	access_log /var/log/nginx/access.log vhost;
	# Do not HTTPS redirect Let'sEncrypt ACME challenge
	location /.well-known/acme-challenge/ {
		auth_basic off;
		allow all;
		root /usr/share/nginx/html;
		try_files $uri =404;
		break;
	}
	location / {
		return 301 https://$host$request_uri;
	}
}
server {
	server_name leanote.9.112.249.39.nip.io;
	listen 443 ssl http2 ;
	access_log /var/log/nginx/access.log vhost;
	ssl_session_timeout 5m;
	ssl_session_cache shared:SSL:50m;
	ssl_session_tickets off;
	ssl_certificate /etc/nginx/certs/9.112.249.39.nip.io.crt;
	ssl_certificate_key /etc/nginx/certs/9.112.249.39.nip.io.key;
	add_header Strict-Transport-Security "max-age=31536000" always;
	location / {
		proxy_pass http://leanote.9.112.249.39.nip.io;
	}
}
# mail.9.112.249.39.nip.io
upstream mail.9.112.249.39.nip.io {
				## Can be connected with "devops-nip" network
			# docker-maildev_maildev_1
			server 172.18.0.10:80;
}
server {
	server_name mail.9.112.249.39.nip.io;
	listen 80 ;
	access_log /var/log/nginx/access.log vhost;
	# Do not HTTPS redirect Let'sEncrypt ACME challenge
	location /.well-known/acme-challenge/ {
		auth_basic off;
		allow all;
		root /usr/share/nginx/html;
		try_files $uri =404;
		break;
	}
	location / {
		return 301 https://$host$request_uri;
	}
}
server {
	server_name mail.9.112.249.39.nip.io;
	listen 443 ssl http2 ;
	access_log /var/log/nginx/access.log vhost;
	ssl_session_timeout 5m;
	ssl_session_cache shared:SSL:50m;
	ssl_session_tickets off;
	ssl_certificate /etc/nginx/certs/9.112.249.39.nip.io.crt;
	ssl_certificate_key /etc/nginx/certs/9.112.249.39.nip.io.key;
	add_header Strict-Transport-Security "max-age=31536000" always;
	location / {
		proxy_pass http://mail.9.112.249.39.nip.io;
	}
}
# nexus.9.112.249.39.nip.io
upstream nexus.9.112.249.39.nip.io {
				## Can be connected with "devops-nip" network
			# nexus
			server 172.18.0.3:8081;
}
server {
	server_name nexus.9.112.249.39.nip.io;
	listen 80 ;
	access_log /var/log/nginx/access.log vhost;
	# Do not HTTPS redirect Let'sEncrypt ACME challenge
	location /.well-known/acme-challenge/ {
		auth_basic off;
		allow all;
		root /usr/share/nginx/html;
		try_files $uri =404;
		break;
	}
	location / {
		return 301 https://$host$request_uri;
	}
}
server {
	server_name nexus.9.112.249.39.nip.io;
	listen 443 ssl http2 ;
	access_log /var/log/nginx/access.log vhost;
	ssl_session_timeout 5m;
	ssl_session_cache shared:SSL:50m;
	ssl_session_tickets off;
	ssl_certificate /etc/nginx/certs/9.112.249.39.nip.io.crt;
	ssl_certificate_key /etc/nginx/certs/9.112.249.39.nip.io.key;
	add_header Strict-Transport-Security "max-age=31536000" always;
	location / {
		proxy_pass http://nexus.9.112.249.39.nip.io;
	}
}
# registry.9.112.249.39.nip.io
upstream registry.9.112.249.39.nip.io {
				## Can be connected with "devops-nip" network
			# registry-httpd
			server 172.18.0.5:8444;
}
server {
	server_name registry.9.112.249.39.nip.io;
	listen 80 ;
	access_log /var/log/nginx/access.log vhost;
	# Do not HTTPS redirect Let'sEncrypt ACME challenge
	location /.well-known/acme-challenge/ {
		auth_basic off;
		allow all;
		root /usr/share/nginx/html;
		try_files $uri =404;
		break;
	}
	location / {
		return 301 https://$host$request_uri;
	}
}
server {
	server_name registry.9.112.249.39.nip.io;
	listen 443 ssl http2 ;
	access_log /var/log/nginx/access.log vhost;
	ssl_session_timeout 5m;
	ssl_session_cache shared:SSL:50m;
	ssl_session_tickets off;
	ssl_certificate /etc/nginx/certs/9.112.249.39.nip.io.crt;
	ssl_certificate_key /etc/nginx/certs/9.112.249.39.nip.io.key;
	add_header Strict-Transport-Security "max-age=31536000" always;
	location / {
		proxy_pass http://registry.9.112.249.39.nip.io;
	}
}
